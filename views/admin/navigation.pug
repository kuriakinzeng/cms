extends ../layout

block content
  .page-header
    h3 Navigation

  form.form-horizontal#form(action='/sites/' + site._id + '/navigations', method='POST')
    input(type='hidden', name='_csrf', value=_csrf)
    input(type='hidden', id='navigations', name='navigations')
    
    #navList
      each navigation in navigations  
        .nav-input(data-order=navigation.order, data-id=navigation._id)
          span.fa.fa-bars.pull-left.text-center.cs-move.nav-drag
          input.form-control(type='text', placeholder='Label', value=navigation.label, required='true')
          input.form-control(type='text', placeholder='URL', value=navigation.url, required='true')
          span.fa.fa-trash.pull-right.text-center.cs-pointer(onclick=`deleteNav("${navigation._id}")`)
    .nav-input#navTemplate.hidden
      span.fa.fa-bars.pull-left.text-center.cs-move
      input.form-control(type='text', placeholder='Label', autofocus)
      input.form-control(type='text', placeholder='URL')
      span.fa.fa-plus.pull-right.text-center.cs-pointer(onclick='addNav(this.parentNode)')
      span.fa.fa-trash.pull-right.text-center.cs-pointer.hidden(onclick='removeNav(this.parentNode)')
      
    .form-group(style='margin-top:20px')
      .col-sm-8
        button.btn.btn-primary(type='button', onclick='saveNav()')
          i.fa.fa-save
          | Save

  style(type="text/css").
    .nav-input {
      display: flex;
      align-items: center;
    }
    .nav-input * {
      margin: 5px
    }
    .cs-move {
      cursor: move;
    }
    .cs-pointer {
      cursor: pointer;
    }
    .hidden {
      display:none;
    }

  script(src="//rubaxa.github.io/Sortable/Sortable.js")
  script.
    Sortable.create(navList, {
      handle: '.nav-drag',
      animation: 150,
      //- onSort: function(event) {
      //-   console.log(event)
      //-   //- event.item.childNodes[3].value = event.newIndex;
      //- },
      onUpdate: function(event) {
        //- console.log(event)
        //- event.item.childNodes[3].value = event.newIndex;
      },
      onSort: function(event) {
        console.log(event)
        //- event.item.childNodes[3].value = event.newIndex;
      },
    }); 
    
    const siteId = '!{site._id}';

    const addNav = (nav) => {
      const label = nav.childNodes[1].value;
      const url = nav.childNodes[2].value;

      if (!label || !url) {
        return alert('value is required')
      }

      nav.childNodes[0].classList.add('nav-drag');
      nav.childNodes[3].classList.add('hidden');
      nav.childNodes[4].classList.remove('hidden');

      displayNavInput();
    }

    const removeNav = (nav) => {
      document.getElementById('navList').removeChild(nav)
    }

    const displayNavInput = () =>{
      const template = document.getElementById('navTemplate');
      const navList = document.getElementById('navList');
      const clone = template.cloneNode(true);
      clone.removeAttribute('id');
      clone.classList.remove('hidden');
      clone.dataset.order = navList.childNodes.length;
      clone.dataset.id = '';
      navList.appendChild(clone)
    }

    const saveNav = () => {
      const navCollections = document.getElementById('navList').childNodes;

      const navigations = Array.from(navCollections)
        .map(el => {
          const inputs = Array.from(el.childNodes);
          const [ label, url ] = inputs.slice(1,3).map(x => x.value);
          const { order, id } = el.dataset;
          
          return {
            label, url, id,
            order: parseInt(order)
          }
        })
        .filter(el => el.url && el.label)
        
      document.getElementById('navigations').value = JSON.stringify(navigations);
      document.getElementById('form').submit();
    }

    const deleteNav = (id) => {
      const deleteForm = document.createElement('form');
      deleteForm.action= `/sites/${siteId}/navigations/${id}/?_method=DELETE`;
      deleteForm.method='POST';

      const csrf = document.getElementsByName('_csrf')[0];
      deleteForm.appendChild(csrf);

      document.body.appendChild(deleteForm);
      deleteForm.submit();
    }

    displayNavInput();
  